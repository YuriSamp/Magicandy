import React, { useEffect, useState } from 'react'
import Card from '@ui/Card'
import db from 'data/db.json'
import Search from 'components/Search/Search'
import Product from 'models/product';
import dbConnect from 'services/connect';
import { DataBase } from 'interface/ServerSideDataBase'
import Head from 'next/head'

//TODO deixar com background white para padronizar


export async function getServerSideProps() {
  dbConnect.connect()
  const database = await Product.find();
  dbConnect.disconnect()
  return {
    props: { db: JSON.parse(JSON.stringify(database)) }
  }
}


function Produtos({ db }: DataBase) {
  const [name, setName] = useState('')
  const [type, setType] = useState('')
  const [dbType, setDbType] = useState(db)
  const [dbFiltrado, setDbFiltrado] = useState(dbType)
  

  useEffect( () => {
    if (type.toLowerCase() !== 'todos') {
     const dbFiltrado = db.filter(item => {
        const typeNormalized = item.Category?.toLocaleLowerCase()
        const typeValueNormalized = type.toLowerCase()
        return typeNormalized?.includes(typeValueNormalized)
      })
      setDbType(dbFiltrado)
    } else {
      setDbType(db)
    }
  }, [type]
  )

  const onChangeHandler = (event: any) => {
    setName(event.target.value)
    console.log(name)
    const dbSearch = dbType.filter(item => {
      const titleNormalized = item.ProductTitle.toLocaleLowerCase()
      const searchValueNormalized = name.toLowerCase()
      return titleNormalized.includes(searchValueNormalized)
    })
    setDbFiltrado(dbSearch)
  }

  

  return (
    <>
      <Head>
        <title>MagiCandy</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.svg" />
      </Head>
      <main className='flex flex-col items-center min-h-screen w-full min-w-[320px]  bg-backgroundPink'>
        <h1 className='text-4xl text-white font-kalam mt-6'>Produtos</h1>

        <div className='flex justify-center w-full flex-wrap gap-6 py-6'>
          <Search onChangeHandler={onChangeHandler} />

          {/* //TODO  incluir rounded no dropdown */}
          <select id='filterSelect' className='py-2 px-4 w-[229px] text-center rounded-lg ring-fontPurple ring-2 bg-white'
            onChange={e => setType(e.target.value) }>
            <option>Todos</option>
            <option>Bolos</option>
            <option>Donuts</option>
            <option>Brownies</option>
            <option>Mousses</option>
            <option>Tapiocas</option>
            <option>Cupcakes</option>
          </select>
        </div>
        <section className="flex grow text-black flex-col h-full gap-x-42 lg:flex-row lg:px-48 gap-16 md:gap-8 px-2 py-16 border-b-2 border-fontPurple items-center justify-evenly flex-wrap">
          {
            dbFiltrado.map(product => (
              <Card
                key={product._id}
                _id={product._id}
                Src={product.Src}
                Alt={product.Alt}
                ProductTitle={product.ProductTitle}
                ProductPrice={product.ProductPrice}
              />
            ))
          }
        </section>
      </main>
    </>
  )
}

export default Produtos